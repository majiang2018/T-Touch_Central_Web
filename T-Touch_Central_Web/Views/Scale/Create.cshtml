@model DATA.model.Scales
@{
    ViewBag.Title = "新建";
}
<h2>新建</h2>
@using (Html.BeginForm("Create", "Scale", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    var Enable = new List<SelectListItem>()
    {
        new SelectListItem() { Text = "True", Value = "True",Selected=true },
        new SelectListItem() { Text = "False", Value = "False" },
    };

    <div class="row">
        <h4>&nbsp;&nbsp;&nbsp;设备</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("店号", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Shop_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shop_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("部门", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Branch_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Branch_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("称号", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Pos_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pos_No, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("称名", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ScaleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ScaleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ip 地址", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input id="IpAddress" type="text" name="IpAddress" required class="form-control">
                @Html.ValidationMessageFor(model => model.IpAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("启用", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("Enable", Enable, "--请选择--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("屏幕保护", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Images, new { htmlAttributes = new { type = "file", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("主背景图片", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Images1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Images1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("主屏背景颜色", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model=>model.Color, new { htmlAttributes = new { type = "color",value = "#FFFFFF",@class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("颜色透明度", htmlAttributes: new { id = "value", @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { type = "range", min = "0", max = "255", value = "255", step = "1", onchange = "change()", @class = "form-control" } })
                @Html.ValidationMessage("Remark", "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div>
            <input type="submit" value="新建" class="btn btn-default" />
        </div>
    </div>
}
<div>
    @Html.ActionLink("返回", "Index")
</div>
<script>
    $(function () {
        document.getElementById("Remark").value = "255";
        document.getElementById('value').innerHTML = "颜色透明度 (" + document.getElementById('Remark').value + ")";
    });
    function change() {
        document.getElementById('value').innerHTML = "颜色透明度 (" + document.getElementById('Remark').value+")";
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
